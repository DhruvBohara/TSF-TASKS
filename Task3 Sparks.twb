<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0818.0857                               -->
<workbook source-build='2020.2.5 (20202.20.0818.0857)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='SampleSuperstore' inline='true' name='federated.083spqp14zj6r41f8236g0mvlr4j' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SampleSuperstore' name='textscan.1up6ueb0mseuj718mgz9g1n04gex'>
            <connection class='textscan' directory='C:/Users/91887/Desktop' filename='SampleSuperstore.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1up6ueb0mseuj718mgz9g1n04gex' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1up6ueb0mseuj718mgz9g1n04gex' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_F1E4E5C0DF0E4DE485E2F03D91751881]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_F1E4E5C0DF0E4DE485E2F03D91751881]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_F1E4E5C0DF0E4DE485E2F03D91751881]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_F1E4E5C0DF0E4DE485E2F03D91751881]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_F1E4E5C0DF0E4DE485E2F03D91751881]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_F1E4E5C0DF0E4DE485E2F03D91751881]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_F1E4E5C0DF0E4DE485E2F03D91751881]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_F1E4E5C0DF0E4DE485E2F03D91751881]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_F1E4E5C0DF0E4DE485E2F03D91751881]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_F1E4E5C0DF0E4DE485E2F03D91751881]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_F1E4E5C0DF0E4DE485E2F03D91751881]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_F1E4E5C0DF0E4DE485E2F03D91751881]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_F1E4E5C0DF0E4DE485E2F03D91751881]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Net Profit Percentage' datatype='real' name='[Calculation_1190920672949342208]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit])*100/SUM([Sales])' />
      </column>
      <column caption='Avg Dis' datatype='real' name='[Calculation_700028316091498496]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Discount])/COUNT([Discount])' />
      </column>
      <column caption='Avg Sale per Segment' datatype='real' name='[Calculation_839921377398849536]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Sales])/COUNT([Segment])' />
      </column>
      <column caption='Dis Amt' datatype='real' name='[Calculation_839921377404137474]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Sales]/[Discount])-[Sales]' />
      </column>
      <column caption='Loss' datatype='real' name='[Calculation_839921377645113348]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-[Profit]' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='SampleSuperstore.csv' datatype='table' name='[__tableau_internal_object_id__].[SampleSuperstore.csv_F1E4E5C0DF0E4DE485E2F03D91751881]' role='measure' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
      <group caption='Action (City)' hidden='true' name='[Action (City)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Ship Mode:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;First Class&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Standard Class&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Second Class&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Same Day&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='SampleSuperstore.csv' id='SampleSuperstore.csv_F1E4E5C0DF0E4DE485E2F03D91751881'>
            <properties context=''>
              <relation connection='textscan.1up6ueb0mseuj718mgz9g1n04gex' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Ship Mode' ordinal='0' />
                  <column datatype='string' name='Segment' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='State' ordinal='4' />
                  <column datatype='integer' name='Postal Code' ordinal='5' />
                  <column datatype='string' name='Region' ordinal='6' />
                  <column datatype='string' name='Category' ordinal='7' />
                  <column datatype='string' name='Sub-Category' ordinal='8' />
                  <column datatype='real' name='Sales' ordinal='9' />
                  <column datatype='integer' name='Quantity' ordinal='10' />
                  <column datatype='real' name='Discount' ordinal='11' />
                  <column datatype='real' name='Profit' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Location based analysis of Sales and Profit' type='sheet' worksheet='US Map' />
      <link caption='Filter1' delimiter=',' escape='\' expression='tsl:Location%20based%20analysis%20of%20Sales%20and%20Profit?%5Bfederated.083spqp14zj6r41f8236g0mvlr4j%5D.%5BState%5D~s0=&lt;[State]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='US Map' />
        <param name='target' value='Location based analysis of Sales and Profit' />
      </command>
    </action>
    <action caption='Filter2' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Location based analysis of Sales and Profit' type='sheet' worksheet='Cities' />
      <link caption='Filter2' delimiter=',' escape='\' expression='tsl:Location%20based%20analysis%20of%20Sales%20and%20Profit?%5Bfederated.083spqp14zj6r41f8236g0mvlr4j%5D.%5BCity%5D~s0=&lt;[City]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Cities,US Map' />
        <param name='target' value='Location based analysis of Sales and Profit' />
      </command>
    </action>
    <action caption='Filter3' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Category based analysis of Sales and Profit' type='sheet' worksheet='Most profitable states gave very less discount while those suffering loss gave too much' />
      <link caption='Filter3' delimiter=',' escape='\' expression='tsl:Category%20based%20analysis%20of%20Sales%20and%20Profit?%5Bfederated.083spqp14zj6r41f8236g0mvlr4j%5D.%5BState%5D~s0=&lt;[State]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Most profitable states gave very less discount while those suffering loss gave too much' />
        <param name='target' value='Category based analysis of Sales and Profit' />
      </command>
    </action>
    <datasources>
      <datasource caption='SampleSuperstore' name='federated.083spqp14zj6r41f8236g0mvlr4j' />
    </datasources>
    <datasource-dependencies datasource='federated.083spqp14zj6r41f8236g0mvlr4j'>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Cities'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='12'>CITIES</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.083spqp14zj6r41f8236g0mvlr4j' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.083spqp14zj6r41f8236g0mvlr4j'>
            <column caption='Net Profit Percentage' datatype='real' name='[Calculation_1190920672949342208]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])*100/SUM([Sales])' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1190920672949342208]' derivation='User' name='[usr:Calculation_1190920672949342208:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.083spqp14zj6r41f8236g0mvlr4j].[none:City:nk]'>
            <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.083spqp14zj6r41f8236g0mvlr4j].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.083spqp14zj6r41f8236g0mvlr4j].[none:State:nk]'>
            <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.083spqp14zj6r41f8236g0mvlr4j].[none:Country:nk]</column>
            <column>[federated.083spqp14zj6r41f8236g0mvlr4j].[none:State:nk]</column>
            <column>[federated.083spqp14zj6r41f8236g0mvlr4j].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.083spqp14zj6r41f8236g0mvlr4j].[Longitude (generated)]' field-type='quantitative' max='-8630623.4958667532' min='-14224174.559208883' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.083spqp14zj6r41f8236g0mvlr4j].[Latitude (generated)]' field-type='quantitative' max='6657983.9258238468' min='3206890.3698474234' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.083spqp14zj6r41f8236g0mvlr4j].[none:City:nk]' />
              <tooltip column='[federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Sales:qk]' />
              <tooltip column='[federated.083spqp14zj6r41f8236g0mvlr4j].[usr:Calculation_1190920672949342208:qk]' />
              <tooltip column='[federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Profit:qk]' />
              <text column='[federated.083spqp14zj6r41f8236g0mvlr4j].[none:City:nk]' />
              <lod column='[federated.083spqp14zj6r41f8236g0mvlr4j].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.083spqp14zj6r41f8236g0mvlr4j].[Latitude (generated)]</rows>
        <cols>[federated.083spqp14zj6r41f8236g0mvlr4j].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6C3124DA-FFDC-4A4F-8518-0CC2B5F998D5}' />
    </worksheet>
    <worksheet name='Most profitable states gave very less discount while those suffering loss gave too much'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='11'>Most profitable states gave very less discount while those suffering loss gave too much </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.083spqp14zj6r41f8236g0mvlr4j' />
          </datasources>
          <datasource-dependencies datasource='federated.083spqp14zj6r41f8236g0mvlr4j'>
            <column caption='Avg Dis' datatype='real' name='[Calculation_700028316091498496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Discount])/COUNT([Discount])' />
            </column>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_700028316091498496]' derivation='User' name='[usr:Calculation_700028316091498496:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Profit:qk]' />
              <text column='[federated.083spqp14zj6r41f8236g0mvlr4j].[none:State:nk]' />
              <lod column='[federated.083spqp14zj6r41f8236g0mvlr4j].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1063' />
                <format attr='maxwidth' value='1063' />
                <format attr='minheight' value='660' />
                <format attr='maxheight' value='660' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Profit:qk]</rows>
        <cols>[federated.083spqp14zj6r41f8236g0mvlr4j].[usr:Calculation_700028316091498496:qk]</cols>
      </table>
      <simple-id uuid='{6BE374AD-4838-41A5-A019-361FBAA34EB8}' />
    </worksheet>
    <worksheet name='Pie Chart showing Total Sales in each category'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.083spqp14zj6r41f8236g0mvlr4j' />
          </datasources>
          <datasource-dependencies datasource='federated.083spqp14zj6r41f8236g0mvlr4j'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.083spqp14zj6r41f8236g0mvlr4j].[none:Category:nk]' />
              <wedge-size column='[federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Sales:qk]' />
              <size column='[federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Sales:qk]' />
              <text column='[federated.083spqp14zj6r41f8236g0mvlr4j].[none:Category:nk]' />
              <text column='[federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7EE81707-609D-45A0-B341-81C91C2FB6C2}' />
    </worksheet>
    <worksheet name='Profit% as a ratio of Sales'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.083spqp14zj6r41f8236g0mvlr4j' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.083spqp14zj6r41f8236g0mvlr4j'>
            <column caption='Net Profit Percentage' datatype='real' name='[Calculation_1190920672949342208]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])*100/SUM([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1190920672949342208]' derivation='User' name='[usr:Calculation_1190920672949342208:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.083spqp14zj6r41f8236g0mvlr4j].[none:State:nk]'>
            <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.083spqp14zj6r41f8236g0mvlr4j].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.083spqp14zj6r41f8236g0mvlr4j].[usr:Calculation_1190920672949342208:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Quantity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.083spqp14zj6r41f8236g0mvlr4j].[usr:Calculation_1190920672949342208:qk] + ([federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Sales:qk] + [federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Quantity:qk]))</rows>
        <cols>([federated.083spqp14zj6r41f8236g0mvlr4j].[none:Category:nk] / [federated.083spqp14zj6r41f8236g0mvlr4j].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{574956E2-9F03-45A1-ADD1-188C9824DF7C}' />
    </worksheet>
    <worksheet name='Tree Map(Most Sales in a sub-category for each type of delivery)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='10'>Tree Map showing most sales in each sub-category for each type of delivery</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.083spqp14zj6r41f8236g0mvlr4j' />
          </datasources>
          <datasource-dependencies datasource='federated.083spqp14zj6r41f8236g0mvlr4j'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.083spqp14zj6r41f8236g0mvlr4j].[none:Ship Mode:nk]'>
            <groupfilter function='level-members' level='[none:Ship Mode:nk]' />
          </filter>
          <filter class='categorical' column='[federated.083spqp14zj6r41f8236g0mvlr4j].[none:State:nk]'>
            <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.083spqp14zj6r41f8236g0mvlr4j].[none:State:nk]</column>
            <column>[federated.083spqp14zj6r41f8236g0mvlr4j].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.083spqp14zj6r41f8236g0mvlr4j].[none:Ship Mode:nk]' />
              <size column='[federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Sales:qk]' />
              <text column='[federated.083spqp14zj6r41f8236g0mvlr4j].[none:Sub-Category:nk]' />
              <text column='[federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4233DE2F-5FB6-40C3-A836-B40CE59FD9C4}' />
    </worksheet>
    <worksheet name='US Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='12'>US MAP</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.083spqp14zj6r41f8236g0mvlr4j' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.083spqp14zj6r41f8236g0mvlr4j'>
            <column caption='Net Profit Percentage' datatype='real' name='[Calculation_1190920672949342208]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])*100/SUM([Sales])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1190920672949342208]' derivation='User' name='[usr:Calculation_1190920672949342208:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.083spqp14zj6r41f8236g0mvlr4j].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.083spqp14zj6r41f8236g0mvlr4j].[none:State:nk]'>
            <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.083spqp14zj6r41f8236g0mvlr4j].[none:Country:nk]</column>
            <column>[federated.083spqp14zj6r41f8236g0mvlr4j].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.083spqp14zj6r41f8236g0mvlr4j].[Longitude (generated)]' field-type='quantitative' max='-5553055.3960460555' min='-15201731.27328109' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.083spqp14zj6r41f8236g0mvlr4j].[Latitude (generated)]' field-type='quantitative' max='6615284.7163956128' min='917000.90209650435' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Profit:qk]' />
              <tooltip column='[federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Sales:qk]' />
              <tooltip column='[federated.083spqp14zj6r41f8236g0mvlr4j].[usr:Calculation_1190920672949342208:qk]' />
              <text column='[federated.083spqp14zj6r41f8236g0mvlr4j].[none:State:nk]' />
              <lod column='[federated.083spqp14zj6r41f8236g0mvlr4j].[none:State:nk]' />
              <geometry column='[federated.083spqp14zj6r41f8236g0mvlr4j].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.083spqp14zj6r41f8236g0mvlr4j].[Latitude (generated)]</rows>
        <cols>[federated.083spqp14zj6r41f8236g0mvlr4j].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{51C8EC4C-E432-4374-B851-ECF2D7F3B940}' />
    </worksheet>
    <worksheet name='Word Map representing the loss in each sub-category'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='12'>Word Map that indicates Profit/Loss</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.083spqp14zj6r41f8236g0mvlr4j' />
          </datasources>
          <datasource-dependencies datasource='federated.083spqp14zj6r41f8236g0mvlr4j'>
            <column caption='Loss' datatype='real' name='[Calculation_839921377645113348]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-[Profit]' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_839921377645113348]' derivation='Sum' name='[sum:Calculation_839921377645113348:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.083spqp14zj6r41f8236g0mvlr4j].[none:State:nk]'>
            <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.083spqp14zj6r41f8236g0mvlr4j].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Profit:qk]' />
              <size column='[federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Calculation_839921377645113348:qk]' />
              <text column='[federated.083spqp14zj6r41f8236g0mvlr4j].[none:Sub-Category:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Sub-Category:&#9;</run>
                <run bold='true'><![CDATA[<[federated.083spqp14zj6r41f8236g0mvlr4j].[none:Sub-Category:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Loss:&#9;</run>
                <run bold='true'><![CDATA[<[federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Calculation_839921377645113348:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5967E2C4-F13B-40B3-A0B9-FEEB17F04375}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Category based analysis of Sales and Profit'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='91750' id='25' param='horz' w='98400' x='800' y='7250'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='91750' id='23' param='horz' w='98400' x='800' y='7250'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='91750' id='20' param='horz' w='98400' x='800' y='7250'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='91750' id='18' w='98400' x='800' y='7250'>
                  <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='45875' id='16' param='horz' w='98400' x='800' y='53125'>
                    <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='45875' id='14' w='98400' x='800' y='53125'>
                      <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='45875' id='7' param='horz' w='98400' x='800' y='53125'>
                        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='45875' id='5' w='98400' x='800' y='53125'>
                          <zone h='45875' id='9' name='Tree Map(Most Sales in a sub-category for each type of delivery)' w='47100' x='800' y='53125'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='45875' id='11' name='Word Map representing the loss in each sub-category' w='51300' x='47900' y='53125'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                  <zone h='45875' id='17' name='Most profitable states gave very less discount while those suffering loss gave too much' w='81299' x='800' y='7250'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='45875' id='21' name='Pie Chart showing Total Sales in each category' w='17101' x='82099' y='7250'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='6250' id='26' w='98400' x='800' y='1000'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontsize='15'>Category Based Analysis Of Sales and Discount</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='38' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='37' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='6250' id='26' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontsize='15'>Category Based Analysis Of Sales and Discount</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45875' id='17' is-fixed='true' name='Most profitable states gave very less discount while those suffering loss gave too much' w='81299' x='800' y='7250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45875' id='21' is-fixed='true' name='Pie Chart showing Total Sales in each category' w='17101' x='82099' y='7250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45875' id='9' is-fixed='true' name='Tree Map(Most Sales in a sub-category for each type of delivery)' w='47100' x='800' y='53125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45875' id='11' is-fixed='true' name='Word Map representing the loss in each sub-category' w='51300' x='47900' y='53125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A5071C19-366B-44C3-8905-7B10BDB06545}' />
    </dashboard>
    <dashboard name='Location based analysis of Sales and Profit'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='91500' id='18' param='horz' w='98400' x='800' y='7500'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='91500' id='16' w='98400' x='800' y='7500'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='91500' id='12' param='horz' w='49200' x='50000' y='7500'>
                <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='91500' id='7' param='horz' w='49200' x='50000' y='7500'>
                  <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='91500' id='5' w='49200' x='50000' y='7500'>
                    <zone h='45750' id='9' name='Cities' w='49200' x='50000' y='7500'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='45750' id='10' name='US Map' w='49200' x='50000' y='53250'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone h='71193' id='14' name='Profit% as a ratio of Sales' w='49200' x='800' y='27807'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='20307' id='15' name='Pie Chart showing Total Sales in each category' w='49200' x='800' y='7500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='6500' id='19' w='98400' x='800' y='1000'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='16'>Location Based Analysis Of Sales And Profit</run>
              <run fontalignment='1'>Æ&#10;</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='31' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='30' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='6500' id='19' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='16'>Location Based Analysis Of Sales And Profit</run>
                    <run fontalignment='1'>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='154' h='20307' id='15' is-fixed='true' name='Pie Chart showing Total Sales in each category' w='49200' x='800' y='7500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45750' id='9' is-fixed='true' name='Cities' w='49200' x='50000' y='7500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='71193' id='14' is-fixed='true' name='Profit% as a ratio of Sales' w='49200' x='800' y='27807'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45750' id='10' is-fixed='true' name='US Map' w='49200' x='50000' y='53250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0045B44F-54BD-4DF0-A643-DA56CE83AE44}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='US Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B19F0E5-15CA-40D0-8AC9-4C07DA7BA8CA}' />
    </window>
    <window class='worksheet' name='Cities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.083spqp14zj6r41f8236g0mvlr4j].[none:State:nk]' type='filter' />
            <card param='[federated.083spqp14zj6r41f8236g0mvlr4j].[none:City:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.083spqp14zj6r41f8236g0mvlr4j].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DAC4986F-D4AD-45F6-A6DE-88751D9AD749}' />
    </window>
    <window class='worksheet' name='Tree Map(Most Sales in a sub-category for each type of delivery)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.083spqp14zj6r41f8236g0mvlr4j].[none:Ship Mode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[none:City:nk]</field>
            <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[none:Country:nk]</field>
            <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[none:Region:nk]</field>
            <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[none:Ship Mode:nk]</field>
            <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[none:State:nk]</field>
            <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B9FA9E06-F705-4404-BD8F-F667A02C2786}' />
    </window>
    <window class='worksheet' name='Word Map representing the loss in each sub-category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[none:City:nk]</field>
            <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[none:Segment:nk]</field>
            <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[none:State:nk]</field>
            <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1616AE99-BFE9-4913-B6D8-F3581ECDE5C6}' />
    </window>
    <window class='worksheet' name='Most profitable states gave very less discount while those suffering loss gave too much'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{593E7FFE-56F2-46BE-ABC2-CFDEE4492748}' />
    </window>
    <window class='worksheet' name='Profit% as a ratio of Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{85B2751D-5E4F-4184-9029-ADB9EF68D033}' />
    </window>
    <window class='worksheet' name='Pie Chart showing Total Sales in each category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.083spqp14zj6r41f8236g0mvlr4j].[none:Category:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EB8A1F37-5DDA-4359-954C-9BB134C6D029}' />
    </window>
    <window class='dashboard' name='Location based analysis of Sales and Profit'>
      <viewpoints>
        <viewpoint name='Cities'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[none:City:nk]</field>
                    <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Profit:qk]</field>
                    <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Sales:qk]</field>
                    <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[Latitude (generated)]</field>
                    <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[Longitude (generated)]</field>
                    <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[usr:Calculation_1190920672949342208:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Santa Barbara&quot;</value>
                  <value>457.28579999999999</value>
                  <value>4289.2340000000004</value>
                  <value>34.4098</value>
                  <value>-119.697</value>
                  <value>10.661246273810194</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight field='[federated.083spqp14zj6r41f8236g0mvlr4j].[none:City:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Pie Chart showing Total Sales in each category'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit% as a ratio of Sales'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='US Map'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[none:State:nk]</field>
                    <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Profit:qk]</field>
                    <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Sales:qk]</field>
                    <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[Geometry (generated)]</field>
                    <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[Latitude (generated)]</field>
                    <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[Longitude (generated)]</field>
                    <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[usr:Calculation_1190920672949342208:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;California&quot;</value>
                  <value>76381.387100000167</value>
                  <value>457687.63150000101</value>
                  <value>&quot;MULTIPOLYGON(((-124.2116 41.9985,-123.8215 41.9955,-123.657 41.9951,-123.5179 42.0009,-123.3476 41.9991,-123.146 42.0092,-123.0453 42.0031,-122.6347 42.0049,-122.3782 42.0095,-122.1627 42.0078,-121.4476 41.9975,-120.8795 41.9938,-120.3101 41.9932,-119.9992 41.9945,-119.9983 41.7499,-119.9999 41.184,-119.9988 40.7739,-119.996 40.5706,-119.9972 40.0698,-120.0038 39.4451,-120.0063 39.3165,-120.001 38.9996,-119.5854 38.7132,-119.157 38.4147,-118.7142 38.1021,-118.4281 37.8962,-117.8327 37.4649,-117.5001 37.2204,-117.166 36.9711,-116.4882 36.4591,-115.846 35.9637,-115.6483 35.8092,-115.2597 35.5035,-114.6335 35.0019,-114.6283 34.8636,-114.5923 34.8412,-114.5527 34.7669,-114.4726 34.7136,-114.4509 34.6678,-114.4364 34.5968,-114.3808 34.5297,-114.3867 34.4579,-114.3396 34.4514,-114.2261 34.3659,-114.1769 34.3493,-114.1383 34.3032,-114.1355 34.2579,-114.1645 34.2517,-114.2561 34.1731,-114.287 34.1707,-114.3216 34.1381,-114.4159 34.1076,-114.4354 34.0797,-114.4383 34.0226,-114.535 33.9257,-114.5039 33.8658,-114.5299 33.8576,-114.5281 33.815,-114.5071 33.7679,-114.4965 33.6969,-114.5321 33.6697,-114.5221 33.6113,-114.5406 33.5914,-114.5242 33.5531,-114.558 33.5326,-114.6229 33.4566,-114.6271 33.4335,-114.7242 33.4004,-114.6991 33.3612,-114.7233 33.2881,-114.677 33.2702,-114.6787 33.163,-114.7065 33.0882,-114.6708 33.038,-114.6448 33.0487,-114.5981 33.0254,-114.5165 33.0276,-114.4629 32.9079,-114.469 32.8452,-114.5317 32.7912,-114.5269 32.7571,-114.6156 32.7285,-114.7022 32.7454,-114.7196 32.7188,-115.5134 32.6636,-116.1062 32.6186,-116.6859 32.5715,-117.1239 32.5343,-117.1667 32.6981,-117.2349 32.717,-117.2822 32.8401,-117.2551 32.906,-117.3256 33.1165,-117.4793 33.306,-117.5959 33.3866,-117.7145 33.4599,-117.7862 33.5424,-118.0311 33.6782,-118.106 33.7517,-118.0974 33.7741,-118.2509 33.7702,-118.2983 33.7098,-118.4114 33.741,-118.3905 33.8366,-118.4927 34.0058,-118.5716 34.0415,-118.745 34.0323,-118.8057 34.0003,-118.9449 34.0453,-119.1302 34.1001,-119.2291 34.1599,-119.2822 34.2702,-119.4767 34.3732,-119.5566 34.412,-119.7091 34.3954,-119.8779 34.4069,-120.0078 34.4605,-120.2992 34.4697,-120.4528 34.4456,-120.5114 34.523,-120.6448 34.5806,-120.6004 34.7046,-120.6374 34.7559,-120.6103 34.8582,-120.6708 34.9041,-120.6491 34.9746,-120.6299 35.0615,-120.6511 35.1478,-120.756 35.1604,-120.8976 35.2479,-120.8627 35.3468,-120.9056 35.4484,-121.0037 35.4608,-121.1638 35.6335,-121.2817 35.6669,-121.3473 35.7952,-121.4622 35.8856,-121.5116 36.0066,-121.5735 36.0236,-121.6336 36.1213,-121.7165 36.1948,-121.8356 36.2493,-121.8996 36.307,-121.9371 36.472,-121.9364 36.637,-121.8897 36.6014,-121.8165 36.6768,-121.7883 36.8046,-121.8117 36.8503,-121.8594 36.927,-121.9395 36.9781,-121.9759 36.9541,-122.1058 36.9561,-122.2229 37.0251,-122.2931 37.1071,-122.3296 37.1123,-122.4191 37.2415,-122.4016 37.3607,-122.4702 37.5006,-122.5196 37.5334,-122.5028 37.7081,-122.5134 37.7828,-122.4204 37.8111,-122.357 37.7287,-122.3933 37.7083,-122.3874 37.6295,-122.2025 37.5407,-122.1154 37.4661,-121.9748 37.4607,-122.1051 37.4988,-122.1638 37.6717,-122.2611 37.7402,-122.2434 37.7837,-122.328 37.7985,-122.3125 37.8974,-122.3886 37.9118,-122.4295 37.9646,-122.2441 38.0582,-122.1515 38.0226,-122.0225 38.058,-121.7411 38.0194,-121.6575 38.0558,-121.5816 38.0084,-121.5695 38.0969,-121.7373 38.0851,-121.8039 38.0627,-121.8985 38.0504,-121.911 38.082,-122.0124 38.0936,-122.0627 38.1353,-122.1314 38.0434,-122.2272 38.0651,-122.4061 38.1559,-122.4934 38.1105,-122.495 37.9701,-122.4499 37.8724,-122.5222 37.8854,-122.4789 37.8256,-122.5318 37.8192,-122.6428 37.8974,-122.7026 37.8938,-122.8209 37.9963,-122.9258 38.0303,-122.936 38.0845,-123.013 38.0014,-122.9487 38.1548,-122.9952 38.2409,-122.8825 38.1234,-123.0027 38.2957,-123.0581 38.2982,-123.1291 38.451,-123.3329 38.5653,-123.5187 38.76,-123.6474 38.8455,-123.7376 38.9501,-123.6893 39.0321,-123.7209 39.1353,-123.7708 39.1942,-123.8277 39.3487,-123.8205 39.4396,-123.7728 39.5341,-123.7865 39.6606,-123.8538 39.8341,-124.0232 40.0013,-124.0808 40.0312,-124.1113 40.1042,-124.1879 40.1305,-124.3634 40.261,-124.3489 40.3113,-124.4086 40.4432,-124.3873 40.5105,-124.1882 40.8254,-124.1117 41.0277,-124.1535 41.0536,-124.1584 41.143,-124.1066 41.2307,-124.0652 41.4647,-124.1017 41.6039,-124.1614 41.7375,-124.2558 41.783,-124.2066 41.8992,-124.2116 41.9985)),((-118.606 33.479,-118.3723 33.4101,-118.3103 33.3367,-118.3252 33.2991,-118.4563 33.3218,-118.4888 33.4198,-118.606 33.479)),((-118.594 33.036,-118.4912 32.9285,-118.3676 32.8374,-118.4259 32.8031,-118.4994 32.8518,-118.594 33.036)),((-119.534 33.2847,-119.4217 33.2288,-119.4688 33.2142,-119.5726 33.2583,-119.534 33.2847)),((-119.917 34.0774,-119.7131 34.0434,-119.6313 34.0136,-119.5634 34.0557,-119.5598 33.9954,-119.7147 33.9614,-119.8742 33.98,-119.917 34.0774)),((-120.0546 34.0375,-119.9684 33.9421,-120.1196 33.8942,-120.2377 34.0093,-120.0546 34.0375)),((-120.3658 34.0741,-120.2992 34.0209,-120.4376 34.0383,-120.3658 34.0741)))&quot;</value>
                  <value>37.25</value>
                  <value>-119.75</value>
                  <value>16.688540795754495</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{5DC5EF5F-EB09-43C7-B157-781E5A2121B5}' />
    </window>
    <window class='dashboard' maximized='true' name='Category based analysis of Sales and Profit'>
      <viewpoints>
        <viewpoint name='Most profitable states gave very less discount while those suffering loss gave too much'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[usr:Calculation_700028316091498496:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Profit:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[none:State:nk]</field>
                    <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[sum:Profit:qk]</field>
                    <field>[federated.083spqp14zj6r41f8236g0mvlr4j].[usr:Calculation_700028316091498496:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Colorado&quot;</value>
                  <value>-6527.8579000000009</value>
                  <value>0.31648351648351752</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Pie Chart showing Total Sales in each category'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Tree Map(Most Sales in a sub-category for each type of delivery)' />
        <viewpoint name='Word Map representing the loss in each sub-category' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E49FE4BA-5B6C-4825-818A-C7777DB1A9F4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Category based analysis of Sales and Profit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cities' width='192'>
      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
      TDj+xl/DbEL8UOKI6AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Location based analysis of Sales and Profit' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Most profitable states gave very less discount while those suffering loss gave too much' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pie Chart showing Total Sales in each category' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit% as a ratio of Sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tree Map(Most Sales in a sub-category for each type of delivery)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='US Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Word Map representing the loss in each sub-category' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
